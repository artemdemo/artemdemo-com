{"version":3,"sources":["webpack:///./src/components/Posts/PostsItem.jsx","webpack:///./src/components/Posts/Posts.jsx","webpack:///./src/components/Pagination/PaginationNumItem.jsx","webpack:///./src/components/Pagination/Pagination.jsx","webpack:///./src/pages/PostsList/PostsList.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/services/utils.js","webpack:///./node_modules/classnames/index.js","webpack:///./src/components/SecondaryText/SecondaryText.jsx","webpack:///./src/components/PostDate/PostDate.jsx","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js"],"names":["PostItemSty","styled","div","PostsItem","React","PureComponent","constructor","props","super","this","state","content","componentDidMount","excerpt","_get","renderMd","then","setState","render","node","title","fields","slug","to","utils","PostDate","frontmatter","date","dangerouslySetInnerHTML","__html","propTypes","PropTypes","shape","defaultProps","Posts","list","Fragment","map","post","key","arrayOf","PaginationNumItem","prefixPath","path","prefixer","pageNum","active","itemClass","classnames","className","number","isRequired","bool","func","Pagination","renderPrev","skip","totalPosts","limit","disabled","prevPageNumber","Math","floor","prevPath","renderNext","pagesAmount","ceil","nextPageNumber","renderNumPages","currentNumber","iterArr","Array","from","_","index","PostsList","BasePage","renderPagination","totalCount","renderContent","posts","renderAfterContent","BlogIndex","pageQuery","_isString","require","_kebabCase","exports","POSTS_PER_PAGE","prefix","suffix","startsWith","substr","prefixBlog","prefixTag","tag","normalizeTag","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","isArray","inner","apply","call","join","module","SecondaryText","children","kebabCase","createCompounder","result","word","toLowerCase","arrayReduce","deburr","words","reApos","RegExp","callback","string","replace","array","iteratee","accumulator","initAccum","deburrLetter","toString","reLatin","reComboMark","basePropertyOf","object","undefined","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","match","reAsciiWord","reHasUnicodeWord","test","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","rsEmoji","reUnicodeWord"],"mappings":"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","file":"component---src-pages-index-jsx-e59f8d48d201a9fba527.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport _get from 'lodash/get';\nimport styled from 'styled-components';\nimport PostDate from '../PostDate/PostDate';\nimport * as utils from '../../services/utils';\nimport { renderMd } from '../../services/md';\n\n// Yes, I know, not the best solution.\n// The problem is that I need to use here custom service for markdown,\n// because `gatsby-transformer-remark` will work only for posts, but _not_ for excerpts.\nimport './PostsItem.css';\n\nconst PostItemSty = styled.div`\n    margin-bottom: 30px;\n`;\n\nclass PostsItem extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            content: null,\n        };\n    }\n\n    componentDidMount() {\n        const excerpt = _get(this.props, 'node.excerpt');\n\n        if (excerpt) {\n            renderMd(excerpt)\n                .then(content => this.setState({ content }));\n        }\n    }\n\n    render() {\n        const { node } = this.props;\n        if (!node) {\n            return null;\n        }\n        const title = _get(node, 'frontmatter.title') || node.fields.slug;\n        return (\n            <PostItemSty>\n                <h2>\n                    <Link to={utils.prefixBlog(node.fields.slug)}>\n                        {title}\n                    </Link>\n                </h2>\n                <PostDate>\n                    {node.frontmatter.date}\n                </PostDate>\n                <p dangerouslySetInnerHTML={{__html: this.state.content}}/>\n            </PostItemSty>\n        );\n    }\n}\n\nPostsItem.propTypes = {\n    node: PropTypes.shape({}),\n};\n\nPostsItem.defaultProps = {\n    node: null,\n};\n\nexport default PostsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostsItem from './PostsItem';\n\nconst Posts = (props) => {\n    const { list } = props;\n\n    return (\n        <React.Fragment>\n            {list.map((post) => {\n                const { node } = post;\n                return (\n                    <PostsItem\n                        node={node}\n                        key={node.fields.slug}\n                    />\n                )\n            })}\n        </React.Fragment>\n    );\n};\n\nPosts.propTypes = {\n    list: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nPosts.defaultProps = {\n    list: [],\n};\n\nexport default Posts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Link } from 'gatsby';\n\nclass PaginationNumItem extends React.PureComponent {\n    prefixPath(path) {\n        const { prefixer } = this.props;\n        return prefixer ? prefixer(path) : path;\n    }\n\n    render() {\n        const { pageNum, active } = this.props;\n        const itemClass = classnames('page-item', {\n            active\n        });\n        const path = pageNum > 1 ? this.prefixPath(`/${pageNum}`) : this.prefixPath();\n\n        return (\n            <li className={itemClass}>\n                <Link\n                    className='page-link'\n                    to={path}\n                >\n                    {pageNum}\n                </Link>\n            </li>\n        );\n    }\n}\n\nPaginationNumItem.propTypes = {\n    pageNum: PropTypes.number.isRequired,\n    active: PropTypes.bool,\n    prefixer: PropTypes.func,\n};\n\nPaginationNumItem.defaultProps = {\n    active: false,\n    prefixer: null,\n};\n\nexport default PaginationNumItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Link } from 'gatsby';\nimport * as utils from '../../services/utils';\nimport PaginationNumItem from './PaginationNumItem';\n\nclass Pagination extends React.PureComponent {\n    prefixPath(path) {\n        const { prefixer } = this.props;\n        return prefixer ? prefixer(path) : path;\n    }\n\n    renderPrev() {\n        const { skip, totalPosts, limit } = this.props;\n        if (totalPosts === 0) {\n            return null;\n        }\n        const itemClass = classnames('page-item', {\n            disabled: skip === 0\n        });\n        const prevPageNumber = Math.floor(skip / limit);\n        const prevPath = prevPageNumber > 1 ? this.prefixPath(`/${prevPageNumber}`) : this.prefixPath();\n        return (\n            <li className={itemClass}>\n                <Link\n                    className='page-link'\n                    to={prevPath}\n                >\n                    Previous\n                </Link>\n            </li>\n        );\n    }\n\n    renderNext() {\n        const { skip, totalPosts, limit} = this.props;\n        if (totalPosts === 0) {\n            return null;\n        }\n        const pagesAmount = Math.ceil(totalPosts / limit);\n        const nextPageNumber = Math.floor(skip / limit) + 2;\n        const itemClass = classnames('page-item', {\n            disabled: nextPageNumber > pagesAmount,\n        });\n        return (\n            <li className={itemClass}>\n                <Link\n                    className='page-link'\n                    to={this.prefixPath(`/${nextPageNumber}`)}\n                >\n                    Next\n                </Link>\n            </li>\n        );\n    }\n\n    renderNumPages() {\n        const { totalPosts, limit, skip, prefixer } = this.props;\n        if (totalPosts === 0) {\n            return null;\n        }\n        const pagesAmount = Math.ceil(totalPosts / limit);\n        const currentNumber = Math.floor(skip / limit) + 1;\n        const iterArr = Array.from(Array(pagesAmount));\n        return (\n            <React.Fragment>\n                {iterArr.map((_, index) => (\n                    <PaginationNumItem\n                        pageNum={index + 1}\n                        active={currentNumber === index + 1}\n                        prefixer={prefixer}\n                        key={`pagination-item-${index}`}\n                    />\n                ))}\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { totalPosts } = this.props;\n\n        if (totalPosts <= utils.POSTS_PER_PAGE) {\n            return null;\n        }\n\n        return (\n            <ul className='pagination justify-content-center'>\n                {this.renderPrev()}\n                {this.renderNumPages()}\n                {this.renderNext()}\n            </ul>\n        );\n    }\n}\n\nPagination.propTypes = {\n    skip: PropTypes.number,\n    limit: PropTypes.number,\n    totalPosts: PropTypes.number,\n    prefixer: PropTypes.func,\n};\n\nPagination.defaultProps = {\n    skip: 0,\n    limit: 0,\n    totalPosts: 0,\n    prefixer: null,\n};\n\nexport default Pagination;","import React from 'react';\nimport _get from 'lodash/get';\nimport Posts from '../../components/Posts/Posts';\nimport Pagination from '../../components/Pagination/Pagination';\nimport BasePage from '../BasePage/BasePage';\nimport * as utils from '../../services/utils';\n\nclass PostsList extends BasePage {\n    renderPagination(prefixer = utils.prefixBlog) {\n        const totalCount = _get(this.props, 'data.allMarkdownRemark.totalCount', 0);\n        const skip = _get(this.props, 'pageContext.skip', 0);\n        const limit = _get(this.props, 'pageContext.limit', 0);\n\n        return (\n            <Pagination\n                skip={skip}\n                limit={limit}\n                totalPosts={totalCount}\n                prefixer={prefixer}\n            />\n        );\n    }\n\n    renderContent() {\n        const posts = _get(this.props, 'data.allMarkdownRemark.edges');\n        return (\n            <Posts list={posts} />\n        );\n    }\n\n    renderAfterContent() {\n        return this.renderPagination();\n    }\n}\n\nexport default PostsList;\n","import { graphql } from 'gatsby';\nimport PostsList from './PostsList/PostsList';\n\nclass BlogIndex extends PostsList {}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query IndexQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 500)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","const _isString = require('lodash/isString');\nconst _kebabCase = require('lodash/kebabCase');\n\nexports.POSTS_PER_PAGE = 10;\n\nconst prefix = (prefix, slug) => {\n    const suffix = _isString(slug) && slug.startsWith('/') ? slug.substr(1) : slug;\n    if (suffix === '' || suffix == null) {\n        return prefix\n    }\n    return `${prefix}/${suffix}`;\n};\n\nexports.prefixBlog = (slug) => {\n    return prefix('/blog', slug);\n};\n\nexports.prefixTag = (tag, slug) => {\n    return prefix(`/tags`, prefix(tag, slug));\n};\n\n// Normalize tag for use in url.\n//\nexports.normalizeTag = tag => _kebabCase(tag);\n","require(\"core-js/modules/es6.array.is-array\");\n\n/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import styled from 'styled-components';\n\nconst SecondaryText = styled.div`\n    font-size: 85%;\n    margin-bottom: 10px;\n    opacity: 0.5;\n    transition: 300ms;\n    \n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport default SecondaryText;","import React from 'react';\nimport SecondaryText from '../SecondaryText/SecondaryText';\n\nconst PostDate = props => (\n    <SecondaryText>\n        {props.children}\n    </SecondaryText>\n);\n\nexport default PostDate;","var createCompounder = require('./_createCompounder');\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\n\n\nvar kebabCase = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\nmodule.exports = kebabCase;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n/** Used to compose unicode capture groups. */\n\n\nvar rsApos = \"['\\u2019]\";\n/** Used to match apostrophes. */\n\nvar reApos = RegExp(rsApos, 'g');\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\n\nfunction createCompounder(callback) {\n  return function (string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\n\n\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n/** Used to compose unicode character classes. */\n\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n/** Used to compose unicode capture groups. */\n\nvar rsCombo = '[' + rsComboRange + ']';\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\n\nvar reComboMark = RegExp(rsCombo, 'g');\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\n\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;","var basePropertyOf = require('./_basePropertyOf');\n/** Used to map Latin Unicode letters to basic Latin letters. */\n\n\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',\n  '\\xc1': 'A',\n  '\\xc2': 'A',\n  '\\xc3': 'A',\n  '\\xc4': 'A',\n  '\\xc5': 'A',\n  '\\xe0': 'a',\n  '\\xe1': 'a',\n  '\\xe2': 'a',\n  '\\xe3': 'a',\n  '\\xe4': 'a',\n  '\\xe5': 'a',\n  '\\xc7': 'C',\n  '\\xe7': 'c',\n  '\\xd0': 'D',\n  '\\xf0': 'd',\n  '\\xc8': 'E',\n  '\\xc9': 'E',\n  '\\xca': 'E',\n  '\\xcb': 'E',\n  '\\xe8': 'e',\n  '\\xe9': 'e',\n  '\\xea': 'e',\n  '\\xeb': 'e',\n  '\\xcc': 'I',\n  '\\xcd': 'I',\n  '\\xce': 'I',\n  '\\xcf': 'I',\n  '\\xec': 'i',\n  '\\xed': 'i',\n  '\\xee': 'i',\n  '\\xef': 'i',\n  '\\xd1': 'N',\n  '\\xf1': 'n',\n  '\\xd2': 'O',\n  '\\xd3': 'O',\n  '\\xd4': 'O',\n  '\\xd5': 'O',\n  '\\xd6': 'O',\n  '\\xd8': 'O',\n  '\\xf2': 'o',\n  '\\xf3': 'o',\n  '\\xf4': 'o',\n  '\\xf5': 'o',\n  '\\xf6': 'o',\n  '\\xf8': 'o',\n  '\\xd9': 'U',\n  '\\xda': 'U',\n  '\\xdb': 'U',\n  '\\xdc': 'U',\n  '\\xf9': 'u',\n  '\\xfa': 'u',\n  '\\xfb': 'u',\n  '\\xfc': 'u',\n  '\\xdd': 'Y',\n  '\\xfd': 'y',\n  '\\xff': 'y',\n  '\\xc6': 'Ae',\n  '\\xe6': 'ae',\n  '\\xde': 'Th',\n  '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  \"\\u0100\": 'A',\n  \"\\u0102\": 'A',\n  \"\\u0104\": 'A',\n  \"\\u0101\": 'a',\n  \"\\u0103\": 'a',\n  \"\\u0105\": 'a',\n  \"\\u0106\": 'C',\n  \"\\u0108\": 'C',\n  \"\\u010A\": 'C',\n  \"\\u010C\": 'C',\n  \"\\u0107\": 'c',\n  \"\\u0109\": 'c',\n  \"\\u010B\": 'c',\n  \"\\u010D\": 'c',\n  \"\\u010E\": 'D',\n  \"\\u0110\": 'D',\n  \"\\u010F\": 'd',\n  \"\\u0111\": 'd',\n  \"\\u0112\": 'E',\n  \"\\u0114\": 'E',\n  \"\\u0116\": 'E',\n  \"\\u0118\": 'E',\n  \"\\u011A\": 'E',\n  \"\\u0113\": 'e',\n  \"\\u0115\": 'e',\n  \"\\u0117\": 'e',\n  \"\\u0119\": 'e',\n  \"\\u011B\": 'e',\n  \"\\u011C\": 'G',\n  \"\\u011E\": 'G',\n  \"\\u0120\": 'G',\n  \"\\u0122\": 'G',\n  \"\\u011D\": 'g',\n  \"\\u011F\": 'g',\n  \"\\u0121\": 'g',\n  \"\\u0123\": 'g',\n  \"\\u0124\": 'H',\n  \"\\u0126\": 'H',\n  \"\\u0125\": 'h',\n  \"\\u0127\": 'h',\n  \"\\u0128\": 'I',\n  \"\\u012A\": 'I',\n  \"\\u012C\": 'I',\n  \"\\u012E\": 'I',\n  \"\\u0130\": 'I',\n  \"\\u0129\": 'i',\n  \"\\u012B\": 'i',\n  \"\\u012D\": 'i',\n  \"\\u012F\": 'i',\n  \"\\u0131\": 'i',\n  \"\\u0134\": 'J',\n  \"\\u0135\": 'j',\n  \"\\u0136\": 'K',\n  \"\\u0137\": 'k',\n  \"\\u0138\": 'k',\n  \"\\u0139\": 'L',\n  \"\\u013B\": 'L',\n  \"\\u013D\": 'L',\n  \"\\u013F\": 'L',\n  \"\\u0141\": 'L',\n  \"\\u013A\": 'l',\n  \"\\u013C\": 'l',\n  \"\\u013E\": 'l',\n  \"\\u0140\": 'l',\n  \"\\u0142\": 'l',\n  \"\\u0143\": 'N',\n  \"\\u0145\": 'N',\n  \"\\u0147\": 'N',\n  \"\\u014A\": 'N',\n  \"\\u0144\": 'n',\n  \"\\u0146\": 'n',\n  \"\\u0148\": 'n',\n  \"\\u014B\": 'n',\n  \"\\u014C\": 'O',\n  \"\\u014E\": 'O',\n  \"\\u0150\": 'O',\n  \"\\u014D\": 'o',\n  \"\\u014F\": 'o',\n  \"\\u0151\": 'o',\n  \"\\u0154\": 'R',\n  \"\\u0156\": 'R',\n  \"\\u0158\": 'R',\n  \"\\u0155\": 'r',\n  \"\\u0157\": 'r',\n  \"\\u0159\": 'r',\n  \"\\u015A\": 'S',\n  \"\\u015C\": 'S',\n  \"\\u015E\": 'S',\n  \"\\u0160\": 'S',\n  \"\\u015B\": 's',\n  \"\\u015D\": 's',\n  \"\\u015F\": 's',\n  \"\\u0161\": 's',\n  \"\\u0162\": 'T',\n  \"\\u0164\": 'T',\n  \"\\u0166\": 'T',\n  \"\\u0163\": 't',\n  \"\\u0165\": 't',\n  \"\\u0167\": 't',\n  \"\\u0168\": 'U',\n  \"\\u016A\": 'U',\n  \"\\u016C\": 'U',\n  \"\\u016E\": 'U',\n  \"\\u0170\": 'U',\n  \"\\u0172\": 'U',\n  \"\\u0169\": 'u',\n  \"\\u016B\": 'u',\n  \"\\u016D\": 'u',\n  \"\\u016F\": 'u',\n  \"\\u0171\": 'u',\n  \"\\u0173\": 'u',\n  \"\\u0174\": 'W',\n  \"\\u0175\": 'w',\n  \"\\u0176\": 'Y',\n  \"\\u0177\": 'y',\n  \"\\u0178\": 'Y',\n  \"\\u0179\": 'Z',\n  \"\\u017B\": 'Z',\n  \"\\u017D\": 'Z',\n  \"\\u017A\": 'z',\n  \"\\u017C\": 'z',\n  \"\\u017E\": 'z',\n  \"\\u0132\": 'IJ',\n  \"\\u0133\": 'ij',\n  \"\\u0152\": 'Oe',\n  \"\\u0153\": 'oe',\n  \"\\u0149\": \"'n\",\n  \"\\u017F\": 's'\n};\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\n\nvar deburrLetter = basePropertyOf(deburredLetters);\nmodule.exports = deburrLetter;","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function (key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;","require(\"core-js/modules/es6.regexp.match\");\n\nvar asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\n\n\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;","require(\"core-js/modules/es6.regexp.match\");\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\n\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;","require(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = \"\\\\u2700-\\\\u27bf\",\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = \"\\\\u2000-\\\\u206f\",\n    rsSpaceRange = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\",\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n/** Used to compose unicode capture groups. */\n\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n    rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n/** Used to match complex or compound words. */\n\nvar reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;"],"sourceRoot":""}