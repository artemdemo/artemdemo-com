{"version":3,"sources":["webpack:///./src/components/Pagination/BinaryPagination.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/templates/BlogPost.jsx","webpack:///./src/services/utils.js","webpack:///./src/components/SecondaryText/SecondaryText.jsx","webpack:///./src/components/PostDate/PostDate.jsx","webpack:///./node_modules/lodash/kebabCase.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_deburrLetter.js","webpack:///./node_modules/lodash/_basePropertyOf.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js"],"names":["PaginationContainer","styled","div","PaginationItem","props","left","right","LinkText","span","LinkArrow","BinaryPagination","React","PureComponent","renderPrev","previous","this","slug","title","className","to","rel","renderNext","next","render","propTypes","PropTypes","shape","string","defaultProps","PostTagsItemSty","Link","PostTags","tags","length","SecondaryText","map","tag","normalizeTag","key","arrayOf","BlogPost","Component","renderPagination","pageContext","prevSlug","_get","nextSlug","utils","post","data","markdownRemark","siteTitle","siteDescription","excerpt","Layout","frontmatter","description","metaTitle","location","PostDate","date","dangerouslySetInnerHTML","__html","html","pageQuery","_isString","require","_kebabCase","exports","POSTS_PER_PAGE","prefix","suffix","startsWith","substr","prefixBlog","prefixTag","children","kebabCase","createCompounder","result","word","index","toLowerCase","module","arrayReduce","deburr","words","reApos","RegExp","callback","replace","array","iteratee","accumulator","initAccum","deburrLetter","toString","reLatin","reComboMark","basePropertyOf","object","undefined","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","match","reAsciiWord","reHasUnicodeWord","test","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsModifier","rsSeq","join","rsEmoji","reUnicodeWord"],"mappings":"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AAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,IACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KAER,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,IACV,IAAU,KACV,IAAU,KACV,IAAU,KACV,IAAU,KACV,IAAU,KACV,IAAU,MAYZhB,EAAOf,QAAU2B,G,kBCnMjBZ,EAAOf,QANP,SAAwBgC,GACtB,OAAO,SAAU9D,GACf,OAAiB,MAAV8D,OAAiBC,EAAYD,EAAO9D,M,oBCT/C,EAAQ,IAER,IAAIgE,EAAa,EAAQ,KACrBC,EAAiB,EAAQ,KACzBP,EAAW,EAAQ,KACnBQ,EAAe,EAAQ,KAiC3BrB,EAAOf,QAXP,SAAezC,EAAQ8E,EAASC,GAI9B,OAHA/E,EAASqE,EAASrE,QAGF0E,KAFhBI,EAAUC,OAAQL,EAAYI,GAGrBF,EAAe5E,GAAU6E,EAAa7E,GAAU2E,EAAW3E,GAG7DA,EAAOgF,MAAMF,IAAY,K,oBCnClC,EAAQ,IAGR,IAAIG,EAAc,4CAalBzB,EAAOf,QAJP,SAAoBzC,GAClB,OAAOA,EAAOgF,MAAMC,IAAgB,K,kBCZtC,IAAIC,EAAmB,qEAavB1B,EAAOf,QAJP,SAAwBzC,GACtB,OAAOkF,EAAiBC,KAAKnF,K,oBCX/B,EAAQ,IAER,EAAQ,IAGR,IAaIoF,EAAeC,8OAIfC,EAAU,IAAMF,EAAe,IAE/BG,EAAW,OACXC,EAAY,oBACZC,EAAU,8BACVC,EAAS,oBAAuBN,EAAeG,EAjB9B,qEAqBjBI,EAAa,kCACbC,EAAa,qCACbC,EAAU,8BAIVC,EAAc,MAAQL,EAAU,IAAMC,EAAS,IAC/CK,EAAc,MAAQF,EAAU,IAAMH,EAAS,IAG/CM,EAAWC,gFAKXC,EAJW,oBAIQF,GAHP,gBAAwB,CAbtB,qBAaoCL,EAAYC,GAAYO,KAAK,KAAO,qBAAiBH,EAAW,MAIlHI,EAAU,MAAQ,CAACZ,EAAWG,EAAYC,GAAYO,KAAK,KAAO,IAAMD,EAGxEG,EAAgBxC,OAAO,CAACgC,EAAU,IAAMJ,EAAU,oCAAgC,CAACH,EAASO,EAAS,KAAKM,KAAK,KAAO,IAAKJ,EAAc,oCAAgC,CAACT,EAASO,EAAUC,EAAa,KAAKK,KAAK,KAAO,IAAKN,EAAU,IAAMC,EAAc,iCAAuBD,EAAU,iCALlR,mDADA,mDAMiUN,EAAUa,GAASD,KAAK,KAAM,KAahX3C,EAAOf,QAJP,SAAsBzC,GACpB,OAAOA,EAAOgF,MAAMqB,IAAkB","file":"component---src-templates-blog-post-jsx-9a97a42c16f9acd8c647.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nimport './BinaryPagination.css';\n\nconst PaginationContainer = styled.div`\n    &::after {\n        content: '';\n        display: table;\n        clear: both;\n    }\n    \n    @media (max-width: 768px) {\n        text-align: center;\n    }\n`;\n\nconst PaginationItem = styled.div`\n    ${props => props.left && `\n        float: left;    \n    `};\n    ${props => props.right && `\n        float: right;\n    `};\n    @media (max-width: 768px) {\n        float: initial;\n        display: inline-block;\n        width: 51%;\n    }\n`;\n\nconst LinkText = styled.span`\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n`;\n\nconst LinkArrow = styled.span`\n    flex-grow: 1;\n    :first-child {\n        padding-right: 5px;\n    }\n    :last-child {\n        padding-left: 5px;\n    }\n`;\n\nclass BinaryPagination extends React.PureComponent {\n    renderPrev() {\n        const { previous } = this.props;\n        if (previous && previous.slug != null) {\n            const title = previous.title || previous.slug;\n            return (\n                <ul className='pagination binary-pagination'>\n                    <li className='page-item'>\n                        <Link\n                            className='page-link binary-pagination-link'\n                            to={previous.slug}\n                            rel='prev'\n                        >\n                            <LinkArrow>\n                                ←\n                            </LinkArrow>\n                            <LinkText>\n                                {title}\n                            </LinkText>\n                        </Link>\n                    </li>\n                </ul>\n            );\n        }\n        return null;\n    }\n\n    renderNext() {\n        const { next } = this.props;\n        if (next && next.slug != null) {\n            const title = next.title || next.slug;\n            return (\n                <ul className='pagination binary-pagination'>\n                    <li className='page-item'>\n                        <Link\n                            className='page-link binary-pagination-link'\n                            to={next.slug}\n                            rel='next'\n                        >\n                            <LinkText>\n                                {title}\n                            </LinkText>\n                            <LinkArrow>\n                                →\n                            </LinkArrow>\n                        </Link>\n                    </li>\n                </ul>\n            );\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <PaginationContainer>\n                <PaginationItem left>\n                    {this.renderPrev()}\n                </PaginationItem>\n                <PaginationItem right>\n                    {this.renderNext()}\n                </PaginationItem>\n            </PaginationContainer>\n        );\n    }\n}\n\nBinaryPagination.propTypes = {\n    previous: PropTypes.shape({\n        slug: PropTypes.string,\n        title: PropTypes.string,\n    }),\n    next: PropTypes.shape({\n        slug: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n\nBinaryPagination.defaultProps = {\n    previous: null,\n    next: null,\n};\n\nexport default BinaryPagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport SecondaryText from '../SecondaryText/SecondaryText';\nimport { normalizeTag } from '../../services/utils';\n\nconst PostTagsItemSty = styled(Link)`\n    display: inline-block;\n    margin-right: 5px;\n    \n    &::after {\n        content: ',';\n    }\n    &:last-of-type::after {\n        content: '';\n    }\n`;\n\nconst PostTags = (props) => {\n    const { tags } = props;\n    if (tags.length === 0) {\n        return null;\n    }\n    return (\n        <SecondaryText>\n            Tags:&nbsp;\n            {tags.map(tag => (\n                <PostTagsItemSty\n                    to={`/tags/${normalizeTag(tag)}`}\n                    key={`post-tags-${normalizeTag(tag)}`}\n                >\n                    {tag}\n                </PostTagsItemSty>\n            ))}\n        </SecondaryText>\n    );\n};\n\nPostTags.propTypes = {\n    tags: PropTypes.arrayOf(PropTypes.string),\n};\n\nPostTags.defaultProps = {\n    tags: [],\n};\n\nexport default PostTags;","import React from 'react';\nimport { graphql } from 'gatsby';\nimport _get from 'lodash/get';\nimport Layout from '../components/Layout/Layout';\nimport BinaryPagination from '../components/Pagination/BinaryPagination';\nimport PostDate from '../components/PostDate/PostDate';\nimport PostTags from '../components/PostTags/PostTags';\nimport * as utils from '../services/utils';\n\nimport 'prismjs/themes/prism.css';\n\nclass BlogPost extends React.Component {\n    renderPagination() {\n        const { previous, next } = this.props.pageContext;\n\n        const prevSlug = _get(previous, 'fields.slug', null);\n        const nextSlug = _get(next, 'fields.slug', null);\n\n        return (\n            <BinaryPagination\n                previous={{\n                    slug: prevSlug ? utils.prefixBlog(prevSlug) : null,\n                    title: _get(previous, 'frontmatter.title', null),\n                }}\n                next={{\n                    slug: nextSlug ? utils.prefixBlog(nextSlug) : null,\n                    title: _get(next, 'frontmatter.title', null),\n                }}\n            />\n        );\n    }\n\n    render() {\n        const post = this.props.data.markdownRemark;\n        const siteTitle = _get(this.props, 'data.site.siteMetadata.title');\n        const tags = _get(this.props, 'data.markdownRemark.frontmatter.tags', []);\n        const siteDescription = post.excerpt;\n\n        return (\n            <Layout\n                title={`${post.frontmatter.title} | ${siteTitle}`}\n                description={siteDescription}\n                metaTitle={siteTitle}\n                location={this.props.location}\n            >\n                <h1>{post.frontmatter.title}</h1>\n                <PostDate>\n                    {post.frontmatter.date}\n                </PostDate>\n                <PostTags tags={tags} />\n\n                <div\n                    dangerouslySetInnerHTML={{__html: post.html}}\n                />\n\n                <hr />\n\n                {this.renderPagination()}\n            </Layout>\n        );\n    }\n}\n\nexport default BlogPost;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`;\n","const _isString = require('lodash/isString');\nconst _kebabCase = require('lodash/kebabCase');\n\nexports.POSTS_PER_PAGE = 10;\n\nconst prefix = (prefix, slug) => {\n    const suffix = _isString(slug) && slug.startsWith('/') ? slug.substr(1) : slug;\n    if (suffix === '' || suffix == null) {\n        return prefix\n    }\n    return `${prefix}/${suffix}`;\n};\n\nexports.prefixBlog = (slug) => {\n    return prefix('/blog', slug);\n};\n\nexports.prefixTag = (tag, slug) => {\n    return prefix(`/tags`, prefix(tag, slug));\n};\n\n// Normalize tag for use in url.\n//\nexports.normalizeTag = tag => _kebabCase(tag);\n","import styled from 'styled-components';\n\nconst SecondaryText = styled.div`\n    font-size: 85%;\n    margin-bottom: 10px;\n    opacity: 0.5;\n    transition: 300ms;\n    \n    &:hover {\n        opacity: 1;\n    }\n`;\n\nexport default SecondaryText;","import React from 'react';\nimport SecondaryText from '../SecondaryText/SecondaryText';\n\nconst PostDate = props => (\n    <SecondaryText>\n        {props.children}\n    </SecondaryText>\n);\n\nexport default PostDate;","var createCompounder = require('./_createCompounder');\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\n\n\nvar kebabCase = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\nmodule.exports = kebabCase;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n/** Used to compose unicode capture groups. */\n\n\nvar rsApos = \"['\\u2019]\";\n/** Used to match apostrophes. */\n\nvar reApos = RegExp(rsApos, 'g');\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\n\nfunction createCompounder(callback) {\n  return function (string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;","require(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\n\n\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n/** Used to compose unicode character classes. */\n\nvar rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n/** Used to compose unicode capture groups. */\n\nvar rsCombo = '[' + rsComboRange + ']';\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\n\nvar reComboMark = RegExp(rsCombo, 'g');\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\n\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;","var basePropertyOf = require('./_basePropertyOf');\n/** Used to map Latin Unicode letters to basic Latin letters. */\n\n\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',\n  '\\xc1': 'A',\n  '\\xc2': 'A',\n  '\\xc3': 'A',\n  '\\xc4': 'A',\n  '\\xc5': 'A',\n  '\\xe0': 'a',\n  '\\xe1': 'a',\n  '\\xe2': 'a',\n  '\\xe3': 'a',\n  '\\xe4': 'a',\n  '\\xe5': 'a',\n  '\\xc7': 'C',\n  '\\xe7': 'c',\n  '\\xd0': 'D',\n  '\\xf0': 'd',\n  '\\xc8': 'E',\n  '\\xc9': 'E',\n  '\\xca': 'E',\n  '\\xcb': 'E',\n  '\\xe8': 'e',\n  '\\xe9': 'e',\n  '\\xea': 'e',\n  '\\xeb': 'e',\n  '\\xcc': 'I',\n  '\\xcd': 'I',\n  '\\xce': 'I',\n  '\\xcf': 'I',\n  '\\xec': 'i',\n  '\\xed': 'i',\n  '\\xee': 'i',\n  '\\xef': 'i',\n  '\\xd1': 'N',\n  '\\xf1': 'n',\n  '\\xd2': 'O',\n  '\\xd3': 'O',\n  '\\xd4': 'O',\n  '\\xd5': 'O',\n  '\\xd6': 'O',\n  '\\xd8': 'O',\n  '\\xf2': 'o',\n  '\\xf3': 'o',\n  '\\xf4': 'o',\n  '\\xf5': 'o',\n  '\\xf6': 'o',\n  '\\xf8': 'o',\n  '\\xd9': 'U',\n  '\\xda': 'U',\n  '\\xdb': 'U',\n  '\\xdc': 'U',\n  '\\xf9': 'u',\n  '\\xfa': 'u',\n  '\\xfb': 'u',\n  '\\xfc': 'u',\n  '\\xdd': 'Y',\n  '\\xfd': 'y',\n  '\\xff': 'y',\n  '\\xc6': 'Ae',\n  '\\xe6': 'ae',\n  '\\xde': 'Th',\n  '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  \"\\u0100\": 'A',\n  \"\\u0102\": 'A',\n  \"\\u0104\": 'A',\n  \"\\u0101\": 'a',\n  \"\\u0103\": 'a',\n  \"\\u0105\": 'a',\n  \"\\u0106\": 'C',\n  \"\\u0108\": 'C',\n  \"\\u010A\": 'C',\n  \"\\u010C\": 'C',\n  \"\\u0107\": 'c',\n  \"\\u0109\": 'c',\n  \"\\u010B\": 'c',\n  \"\\u010D\": 'c',\n  \"\\u010E\": 'D',\n  \"\\u0110\": 'D',\n  \"\\u010F\": 'd',\n  \"\\u0111\": 'd',\n  \"\\u0112\": 'E',\n  \"\\u0114\": 'E',\n  \"\\u0116\": 'E',\n  \"\\u0118\": 'E',\n  \"\\u011A\": 'E',\n  \"\\u0113\": 'e',\n  \"\\u0115\": 'e',\n  \"\\u0117\": 'e',\n  \"\\u0119\": 'e',\n  \"\\u011B\": 'e',\n  \"\\u011C\": 'G',\n  \"\\u011E\": 'G',\n  \"\\u0120\": 'G',\n  \"\\u0122\": 'G',\n  \"\\u011D\": 'g',\n  \"\\u011F\": 'g',\n  \"\\u0121\": 'g',\n  \"\\u0123\": 'g',\n  \"\\u0124\": 'H',\n  \"\\u0126\": 'H',\n  \"\\u0125\": 'h',\n  \"\\u0127\": 'h',\n  \"\\u0128\": 'I',\n  \"\\u012A\": 'I',\n  \"\\u012C\": 'I',\n  \"\\u012E\": 'I',\n  \"\\u0130\": 'I',\n  \"\\u0129\": 'i',\n  \"\\u012B\": 'i',\n  \"\\u012D\": 'i',\n  \"\\u012F\": 'i',\n  \"\\u0131\": 'i',\n  \"\\u0134\": 'J',\n  \"\\u0135\": 'j',\n  \"\\u0136\": 'K',\n  \"\\u0137\": 'k',\n  \"\\u0138\": 'k',\n  \"\\u0139\": 'L',\n  \"\\u013B\": 'L',\n  \"\\u013D\": 'L',\n  \"\\u013F\": 'L',\n  \"\\u0141\": 'L',\n  \"\\u013A\": 'l',\n  \"\\u013C\": 'l',\n  \"\\u013E\": 'l',\n  \"\\u0140\": 'l',\n  \"\\u0142\": 'l',\n  \"\\u0143\": 'N',\n  \"\\u0145\": 'N',\n  \"\\u0147\": 'N',\n  \"\\u014A\": 'N',\n  \"\\u0144\": 'n',\n  \"\\u0146\": 'n',\n  \"\\u0148\": 'n',\n  \"\\u014B\": 'n',\n  \"\\u014C\": 'O',\n  \"\\u014E\": 'O',\n  \"\\u0150\": 'O',\n  \"\\u014D\": 'o',\n  \"\\u014F\": 'o',\n  \"\\u0151\": 'o',\n  \"\\u0154\": 'R',\n  \"\\u0156\": 'R',\n  \"\\u0158\": 'R',\n  \"\\u0155\": 'r',\n  \"\\u0157\": 'r',\n  \"\\u0159\": 'r',\n  \"\\u015A\": 'S',\n  \"\\u015C\": 'S',\n  \"\\u015E\": 'S',\n  \"\\u0160\": 'S',\n  \"\\u015B\": 's',\n  \"\\u015D\": 's',\n  \"\\u015F\": 's',\n  \"\\u0161\": 's',\n  \"\\u0162\": 'T',\n  \"\\u0164\": 'T',\n  \"\\u0166\": 'T',\n  \"\\u0163\": 't',\n  \"\\u0165\": 't',\n  \"\\u0167\": 't',\n  \"\\u0168\": 'U',\n  \"\\u016A\": 'U',\n  \"\\u016C\": 'U',\n  \"\\u016E\": 'U',\n  \"\\u0170\": 'U',\n  \"\\u0172\": 'U',\n  \"\\u0169\": 'u',\n  \"\\u016B\": 'u',\n  \"\\u016D\": 'u',\n  \"\\u016F\": 'u',\n  \"\\u0171\": 'u',\n  \"\\u0173\": 'u',\n  \"\\u0174\": 'W',\n  \"\\u0175\": 'w',\n  \"\\u0176\": 'Y',\n  \"\\u0177\": 'y',\n  \"\\u0178\": 'Y',\n  \"\\u0179\": 'Z',\n  \"\\u017B\": 'Z',\n  \"\\u017D\": 'Z',\n  \"\\u017A\": 'z',\n  \"\\u017C\": 'z',\n  \"\\u017E\": 'z',\n  \"\\u0132\": 'IJ',\n  \"\\u0133\": 'ij',\n  \"\\u0152\": 'Oe',\n  \"\\u0153\": 'oe',\n  \"\\u0149\": \"'n\",\n  \"\\u017F\": 's'\n};\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\n\nvar deburrLetter = basePropertyOf(deburredLetters);\nmodule.exports = deburrLetter;","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function (key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;","require(\"core-js/modules/es6.regexp.match\");\n\nvar asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\n\n\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;","require(\"core-js/modules/es6.regexp.match\");\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\n\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;","require(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = \"\\\\u2700-\\\\u27bf\",\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = \"\\\\u2000-\\\\u206f\",\n    rsSpaceRange = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\",\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n/** Used to compose unicode capture groups. */\n\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n    rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n/** Used to match complex or compound words. */\n\nvar reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')', rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower, rsUpper + '+' + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji].join('|'), 'g');\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\n\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;"],"sourceRoot":""}