{"version":3,"sources":["webpack:///./src/pages/md/about.md","webpack:///./src/pages/about.jsx","webpack:///./src/services/testEnv.js"],"names":["About","BasePage","constructor","props","super","this","contentMd","isTestEnv","require","default","process","e"],"mappings":"2FAAA,OAAe,62B,kCCAf,6CAKA,MAAMA,UAAcC,UAClBC,YAAYC,GACVC,MAAMD,GAONE,KAAKC,UAAYC,IAAY,KAAOC,EAAQ,QAA4BC,SAI7DT,a,kCClBf,kCAIO,MAAMO,EAAY,MACvB,IACE,OAAOG,EACP,MAAOC,GACP,OAAO,IAJc","file":"component---src-pages-about-jsx-6007c3b99db989c304e4.js","sourcesContent":["export default \"Hi guys,\\n\\nMy name is Artem and I'm a Frontend developer.\\nI live and work in Tel Aviv, while trying to build useful things. I decided to start this blog for number of reasons:\\n\\nFirst, I really believe in knowledge sharing.\\nThis is what continues to improve the web industry and each developer can only benefit from that\\n(the one who shares and the one who can find useful information on the internet).\\n\\nSecond, writing helps me better understand the concepts.\\nYou truly start to understand something, only when you start to explain it to someone.\\nI know that for some it could seem unintuitive, but it's true.\\nBy explaining complicated concepts we start to understand them better  ourselves.\\n\\nIf you're interested in my open source projects, or code examples, you can checkout\\n[my github account](https://github.com/artemdemo)\\n\\nBest, <br />\\nArtem\";","import React from 'react'\nimport {graphql} from 'gatsby';\nimport BasePage from './BasePage/BasePage';\nimport {isTestEnv} from '../services/testEnv';\n\nclass About extends BasePage {\n  constructor(props) {\n    super(props);\n\n    // Here I'm using inline loader for webpack.\n    // Since I don't have access to original webpack configuration,\n    // it's the only way to use specific loader\n    // @docs https://webpack.js.org/concepts/loaders/#inline\n    //\n    this.contentMd = isTestEnv ? null : require('raw-loader!./md/about.md').default;\n  }\n}\n\nexport default About;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n  }\n`;\n","// While running test there will be access to env variables.\n// If there is such access, then we can check whether it's test\n// and make some adjustments.\n//\nexport const isTestEnv = (() => {\n  try {\n    return process.env.NODE_ENV === 'test';\n  } catch (e) {\n    return false;\n  }\n})();\n"],"sourceRoot":""}