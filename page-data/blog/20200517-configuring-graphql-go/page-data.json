{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blog/20200517-configuring-graphql-go/","result":{"data":{"site":{"siteMetadata":{"title":"Artem Demo, indie developer","author":"Artem Demo"}},"markdownRemark":{"id":"96b50585-0c98-59f3-bd7a-630816a632c4","excerpt":"It’s not that hard to use graphql with go, but it could take some effort to find all the gotchas. Therefore let’s save some time and talk about some configuration of graphql in Golang. In this tutorial I’ll use graphql-go/graphql library, version v0.7.9","html":"<p>It’s not that hard to use graphql with go, but it could take some effort to find all the gotchas. Therefore let’s save some time and talk about some configuration of graphql in Golang.</p>\n<p>In this tutorial I’ll use <a href=\"https://github.com/graphql-go/graphql\">graphql-go/graphql</a> library, version v0.7.9</p>\n<!-- end -->\n<p>Somehow for this library there are only a few examples of schema type definitions. And almost no example of somehow sophisticated scenarios. So you’ll need to spend some time diggin the internet in order to find a solution to your case. Here I want to share some examples.</p>\n<p>First of all you’ll need to handle routing in order to receive graphql requests:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"net/http\"</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/graphql\"</span><span class=\"token punctuation\">,</span> services<span class=\"token punctuation\">.</span><span class=\"token function\">CorsMiddleware</span><span class=\"token punctuation\">(</span>controllers<span class=\"token punctuation\">.</span><span class=\"token function\">GraphqlHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">CorsMiddleware</code> will do 2 things</p>\n<ol>\n<li>Allow CORS (or not, you can change it in your implementation)</li>\n<li>Handle OPTIONS request of the browser</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">EnableCors</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Logger<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enabling CORS (%s)\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>Method<span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span><span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span><span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Headers\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Origin, X-Requested-With, Content-Type, Accept\"</span><span class=\"token punctuation\">)</span>\n    w<span class=\"token punctuation\">.</span><span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Allow-Methods\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GET, POST,OPTIONS\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>Method <span class=\"token operator\">==</span> <span class=\"token string\">\"OPTIONS\"</span> <span class=\"token punctuation\">{</span>\n        w<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">CorsMiddleware</span><span class=\"token punctuation\">(</span>next http<span class=\"token punctuation\">.</span>Handler<span class=\"token punctuation\">)</span> http<span class=\"token punctuation\">.</span>Handler <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">HandlerFunc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">EnableCors</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\">// If the request method is OPTIONS,</span>\n        <span class=\"token comment\">// then I don't want to process the body or send back a response.</span>\n        <span class=\"token comment\">// In this case I will not continue to the next handler.</span>\n        <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>Method <span class=\"token operator\">!=</span> <span class=\"token string\">\"OPTIONS\"</span> <span class=\"token punctuation\">{</span>\n            next<span class=\"token punctuation\">.</span><span class=\"token function\">ServeHTTP</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In the same service I also have handy function to response with json:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">ResponseJson</span><span class=\"token punctuation\">(</span>jsonStructData <span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n    jsonResponse<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>jsonStructData<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">}</span>\n    w<span class=\"token punctuation\">.</span><span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> w<span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>jsonResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> err\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, the <code class=\"language-text\">graphqlCtrl</code> controller. Here I need to process the body from the request and deal with the query:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">GraphqlHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> http<span class=\"token punctuation\">.</span>Handler <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">HandlerFunc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">.</span>Body <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n            http<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"No query data\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">var</span> rBody models<span class=\"token punctuation\">.</span>GraphqlReqBody\n        <span class=\"token keyword\">var</span> err <span class=\"token builtin\">error</span>\n        err <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">NewDecoder</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>Body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Decode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rBody<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n            graphqlData <span class=\"token operator\">:=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">ProcessGqlQuery</span><span class=\"token punctuation\">(</span>rBody<span class=\"token punctuation\">.</span>Query<span class=\"token punctuation\">,</span> rBody<span class=\"token punctuation\">.</span>Variables<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> graphqlData<span class=\"token punctuation\">.</span>Errors <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n                w<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusBadRequest<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n            err <span class=\"token operator\">=</span> services<span class=\"token punctuation\">.</span><span class=\"token function\">ResponseJson</span><span class=\"token punctuation\">(</span>\n                graphqlData<span class=\"token punctuation\">,</span>\n                w<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n            services<span class=\"token punctuation\">.</span>LoggerE<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            http<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Something went wrong\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span>StatusInternalServerError<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now I need to deal with the query. For this specific purpose I have the <code class=\"language-text\">ProcessGqlQuery</code> function, but first I need to define a general struct for the graphql request body:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> GraphqlReqBody <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n    Query <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"query\"`</span>\n    OperationName <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"operationName\"`</span>\n    Variables <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token string\">`json:\"variables\"`</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now defining the start of the query processing:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">ProcessGqlQuery</span><span class=\"token punctuation\">(</span>query <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> variables <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>graphql<span class=\"token punctuation\">.</span>Result <span class=\"token punctuation\">{</span>\n    retrieveTransactions <span class=\"token operator\">:=</span> <span class=\"token function\">RetrieveTransactionsFromFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    result <span class=\"token operator\">:=</span> graphql<span class=\"token punctuation\">.</span><span class=\"token function\">Do</span><span class=\"token punctuation\">(</span>\n        graphql<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">{</span>\n            Schema<span class=\"token punctuation\">:</span> <span class=\"token function\">gqlSchema</span><span class=\"token punctuation\">(</span>retrieveTransactions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            RequestString<span class=\"token punctuation\">:</span> query<span class=\"token punctuation\">,</span>\n            VariableValues<span class=\"token punctuation\">:</span> variables<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>Errors<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n        services<span class=\"token punctuation\">.</span>LoggerE<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"failed to execute graphql operation, errors: %+v\"</span><span class=\"token punctuation\">,</span>\n            result<span class=\"token punctuation\">.</span>Errors<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I will not explain here how <code class=\"language-text\">RetrieveTransactionsFromFile()</code> works. It’s not important for the overall example. Far more interesting to define the schema.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">gqlSchema</span><span class=\"token punctuation\">(</span>queryTransactions <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>services<span class=\"token punctuation\">.</span>Transaction<span class=\"token punctuation\">)</span> graphql<span class=\"token punctuation\">.</span>Schema <span class=\"token punctuation\">{</span>\n    queryFields <span class=\"token operator\">:=</span> graphql<span class=\"token punctuation\">.</span>Fields<span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"transactions\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n            Type<span class=\"token punctuation\">:</span>        graphql<span class=\"token punctuation\">.</span><span class=\"token function\">NewList</span><span class=\"token punctuation\">(</span>hqlTransactionType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            Description<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Transactions list\"</span><span class=\"token punctuation\">,</span>\n            Args<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>FieldConfigArgument<span class=\"token punctuation\">{</span>\n                <span class=\"token string\">\"accountFrom\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>ArgumentConfig<span class=\"token punctuation\">{</span>\n                    Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"accountTo\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>ArgumentConfig<span class=\"token punctuation\">{</span>\n                    Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"dateRange\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>ArgumentConfig<span class=\"token punctuation\">{</span>\n                    Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span><span class=\"token function\">NewInputObject</span><span class=\"token punctuation\">(</span>graphql<span class=\"token punctuation\">.</span>InputObjectConfig<span class=\"token punctuation\">{</span>\n                        Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"DateRangeInput\"</span><span class=\"token punctuation\">,</span>\n                        Fields<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>InputObjectConfigFieldMap<span class=\"token punctuation\">{</span>\n                            <span class=\"token string\">\"gt\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>InputObjectFieldConfig<span class=\"token punctuation\">{</span>\n                                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                            <span class=\"token string\">\"lt\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>InputObjectFieldConfig<span class=\"token punctuation\">{</span>\n                                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n                            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            Resolve<span class=\"token punctuation\">:</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span>params graphql<span class=\"token punctuation\">.</span>ResolveParams<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                transactions <span class=\"token operator\">:=</span> <span class=\"token function\">queryTransactions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                transactions <span class=\"token operator\">=</span> services<span class=\"token punctuation\">.</span><span class=\"token function\">FilterByDateRange</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">[</span><span class=\"token string\">\"dateRange\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> transactions<span class=\"token punctuation\">)</span>\n                transactions <span class=\"token operator\">=</span> services<span class=\"token punctuation\">.</span><span class=\"token function\">FilterByFromAccount</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">[</span><span class=\"token string\">\"accountFrom\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> transactions<span class=\"token punctuation\">)</span>\n                transactions <span class=\"token operator\">=</span> services<span class=\"token punctuation\">.</span><span class=\"token function\">FilterByToAccount</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">.</span>Args<span class=\"token punctuation\">[</span><span class=\"token string\">\"accountTo\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> transactions<span class=\"token punctuation\">)</span>\n                services<span class=\"token punctuation\">.</span>Logger<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"After filter left %d transactions\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>transactions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">return</span> transactions<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n    schemaConfig <span class=\"token operator\">:=</span> graphql<span class=\"token punctuation\">.</span>SchemaConfig<span class=\"token punctuation\">{</span>\n        Query<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span><span class=\"token function\">NewObject</span><span class=\"token punctuation\">(</span>\n            graphql<span class=\"token punctuation\">.</span>ObjectConfig<span class=\"token punctuation\">{</span>\n                Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Query\"</span><span class=\"token punctuation\">,</span>\n                Fields<span class=\"token punctuation\">:</span> queryFields<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    schema<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> graphql<span class=\"token punctuation\">.</span><span class=\"token function\">NewSchema</span><span class=\"token punctuation\">(</span>schemaConfig<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n        services<span class=\"token punctuation\">.</span>LoggerE<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to create new schema, error: %v\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> schema\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Again, filtering methods <code class=\"language-text\">FilterByDateRange</code>, <code class=\"language-text\">FilterByFromAccount</code> and <code class=\"language-text\">FilterByToAccount</code> are not important here. What is left to do is to define transaction type:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> hqlTransactionType <span class=\"token operator\">=</span> graphql<span class=\"token punctuation\">.</span><span class=\"token function\">NewObject</span><span class=\"token punctuation\">(</span>\n    graphql<span class=\"token punctuation\">.</span>ObjectConfig<span class=\"token punctuation\">{</span>\n        Name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Transaction\"</span><span class=\"token punctuation\">,</span>\n        Fields<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>Fields<span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"date\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"transactionType\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"accountFrom\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"amountInAccountFromCoin\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>Float<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"accountFromCoin\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"accountTo\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"amountInAccountToCoin\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>Float<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"accountToCoin\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"amountInDefaultCoin\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>Float<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"exchangeRate\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>Float<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"defaultCoin\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"tags\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span><span class=\"token function\">NewList</span><span class=\"token punctuation\">(</span>graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"comments\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"category\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"rootCategory\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>graphql<span class=\"token punctuation\">.</span>Field<span class=\"token punctuation\">{</span>\n                Type<span class=\"token punctuation\">:</span> graphql<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Configuring graphql-go/graphql","date":"May 17, 2020","tags":["golang","graphql","graphql-go"]}}},"pageContext":{"slug":"/20200517-configuring-graphql-go/","previous":{"fields":{"slug":"/20200515-hide-or-disable/"},"frontmatter":{"title":"Hide or disable a feature?","tags":["ui","ux","hide","disable"]}},"next":{"fields":{"slug":"/20200703-uuid-app/"},"frontmatter":{"title":"UUID generator app","tags":["uuid","svelte","tailwind css"]}}}},"staticQueryHashes":[]}